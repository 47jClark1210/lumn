-- USERS
ALTER TABLE IF EXISTS users ADD COLUMN IF NOT EXISTS name VARCHAR(100) NOT NULL;
ALTER TABLE IF EXISTS users ADD COLUMN IF NOT EXISTS email VARCHAR(100) NOT NULL UNIQUE;
ALTER TABLE IF EXISTS users ADD COLUMN IF NOT EXISTS role_id INTEGER;
ALTER TABLE IF EXISTS users ADD COLUMN IF NOT EXISTS team_id INTEGER;

-- TEAMS
ALTER TABLE IF EXISTS teams ADD COLUMN IF NOT EXISTS name VARCHAR(100) NOT NULL UNIQUE;
ALTER TABLE IF EXISTS teams ADD COLUMN IF NOT EXISTS org_id INTEGER;

-- USER_FAVORITES
ALTER TABLE IF EXISTS user_favorites ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_favorites ADD COLUMN IF NOT EXISTS favorite_type VARCHAR(32) NOT NULL;
ALTER TABLE IF EXISTS user_favorites ADD COLUMN IF NOT EXISTS favorite_id INTEGER NOT NULL;
ALTER TABLE IF EXISTS user_favorites ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_favorites ADD COLUMN IF NOT EXISTS "order" INTEGER DEFAULT 0;
ALTER TABLE IF EXISTS user_favorites ADD CONSTRAINT IF NOT EXISTS user_favorites_unique UNIQUE(user_id, favorite_type, favorite_id);

-- ROLES
ALTER TABLE IF EXISTS roles ADD COLUMN IF NOT EXISTS name VARCHAR(50) NOT NULL UNIQUE;

-- OKRS
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS title VARCHAR(255) NOT NULL;
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS owner_id INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS team_id INTEGER REFERENCES teams(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS okrs ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- MODULES
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS title VARCHAR(255) NOT NULL;
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS owner_id INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS team_id INTEGER REFERENCES teams(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS modules ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- KEY_RESULTS
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS okr_id INTEGER REFERENCES okrs(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS title VARCHAR(255) NOT NULL;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS target_value NUMERIC;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS current_value NUMERIC DEFAULT 0;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS due_date DATE;
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS key_results ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- LEADERBOARDS
ALTER TABLE IF EXISTS leaderboards ADD COLUMN IF NOT EXISTS team_id INTEGER REFERENCES teams(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS leaderboards ADD COLUMN IF NOT EXISTS name VARCHAR(100) NOT NULL;
ALTER TABLE IF EXISTS leaderboards ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS leaderboards ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS leaderboards ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- LEARNING_FEEDBACK
ALTER TABLE IF EXISTS learning_feedback ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS learning_feedback ADD COLUMN IF NOT EXISTS feedback TEXT NOT NULL;
ALTER TABLE IF EXISTS learning_feedback ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS learning_feedback ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- LEARNING_MODULES
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS title VARCHAR(255) NOT NULL;
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS owner_id INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS team_id INTEGER REFERENCES teams(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS learning_modules ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- LEARNING_OBJECTIVES
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS module_id INTEGER REFERENCES learning_modules(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS title VARCHAR(255) NOT NULL;
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS due_date DATE;
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS learning_objectives ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- LEARNING_PROGRESS
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS module_id INTEGER REFERENCES learning_modules(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS status VARCHAR(50) NOT NULL;
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS progress NUMERIC DEFAULT 0;
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS learning_progress ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- NOTIFICATIONS
ALTER TABLE IF EXISTS notifications ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS notifications ADD COLUMN IF NOT EXISTS message TEXT NOT NULL;
ALTER TABLE IF EXISTS notifications ADD COLUMN IF NOT EXISTS read BOOLEAN DEFAULT FALSE;
ALTER TABLE IF EXISTS notifications ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS notifications ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- MENTORSHIPS
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS mentor_id INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS mentee_id INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS start_date DATE;
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS end_date DATE;
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS status VARCHAR(50) NOT NULL;
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS mentorships ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- SUMMARIES
ALTER TABLE IF EXISTS summaries ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS summaries ADD COLUMN IF NOT EXISTS content TEXT NOT NULL;
ALTER TABLE IF EXISTS summaries ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS summaries ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- SUMMARY_FEEDBACK
ALTER TABLE IF EXISTS summary_feedback ADD COLUMN IF NOT EXISTS summary_id INTEGER REFERENCES summaries(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS summary_feedback ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS summary_feedback ADD COLUMN IF NOT EXISTS feedback TEXT NOT NULL;
ALTER TABLE IF EXISTS summary_feedback ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS summary_feedback ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- PERMISSIONS
ALTER TABLE IF EXISTS permissions ADD COLUMN IF NOT EXISTS role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS permissions ADD COLUMN IF NOT EXISTS permission VARCHAR(100) NOT NULL;
ALTER TABLE IF EXISTS permissions ADD CONSTRAINT IF NOT EXISTS permissions_unique UNIQUE(role_id, permission);

-- USER_PERMISSIONS
ALTER TABLE IF EXISTS user_permissions ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_permissions ADD COLUMN IF NOT EXISTS permission_id INTEGER REFERENCES permissions(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_permissions ADD CONSTRAINT IF NOT EXISTS user_permissions_unique UNIQUE(user_id, permission_id);

-- USER_TEAMS
ALTER TABLE IF EXISTS user_teams ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_teams ADD COLUMN IF NOT EXISTS team_id INTEGER REFERENCES teams(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_teams ADD CONSTRAINT IF NOT EXISTS user_teams_unique UNIQUE(user_id, team_id);

-- USER_ROLES
ALTER TABLE IF EXISTS user_roles ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_roles ADD COLUMN IF NOT EXISTS role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_roles ADD CONSTRAINT IF NOT EXISTS user_roles_unique UNIQUE(user_id, role_id);

-- USER_NOTIFICATIONS
ALTER TABLE IF EXISTS user_notifications ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_notifications ADD COLUMN IF NOT EXISTS notification_id INTEGER REFERENCES notifications(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_notifications ADD COLUMN IF NOT EXISTS read BOOLEAN DEFAULT FALSE;
ALTER TABLE IF EXISTS user_notifications ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_notifications ADD CONSTRAINT IF NOT EXISTS user_notifications_unique UNIQUE(user_id, notification_id);

-- USER_MENTORSHIPS
ALTER TABLE IF EXISTS user_mentorships ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_mentorships ADD COLUMN IF NOT EXISTS mentorship_id INTEGER REFERENCES mentorships(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_mentorships ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_mentorships ADD CONSTRAINT IF NOT EXISTS user_mentorships_unique UNIQUE(user_id, mentorship_id);

-- USER_LEARNING_PROGRESS
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS learning_module_id INTEGER REFERENCES learning_modules(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS status VARCHAR(50) NOT NULL;
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS progress NUMERIC DEFAULT 0;
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_learning_progress ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- USER_SUMMARIES
ALTER TABLE IF EXISTS user_summaries ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_summaries ADD COLUMN IF NOT EXISTS summary_id INTEGER REFERENCES summaries(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_summaries ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_summaries ADD CONSTRAINT IF NOT EXISTS user_summaries_unique UNIQUE(user_id, summary_id);

-- USER_LEARNING_FEEDBACK
ALTER TABLE IF EXISTS user_learning_feedback ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_learning_feedback ADD COLUMN IF NOT EXISTS learning_module_id INTEGER REFERENCES learning_modules(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_learning_feedback ADD COLUMN IF NOT EXISTS feedback TEXT NOT NULL;
ALTER TABLE IF EXISTS user_learning_feedback ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_learning_feedback ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- USER_LEADERBOARDS
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS leaderboard_id INTEGER REFERENCES leaderboards(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS position INTEGER;
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS score NUMERIC;
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_leaderboards ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();

-- SKILLS
ALTER TABLE IF EXISTS skills ADD COLUMN IF NOT EXISTS name VARCHAR(100) NOT NULL UNIQUE;
ALTER TABLE IF EXISTS skills ADD COLUMN IF NOT EXISTS description TEXT;

-- USER_SKILLS
ALTER TABLE IF EXISTS user_skills ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_skills ADD COLUMN IF NOT EXISTS skill_id INTEGER REFERENCES skills(id) ON DELETE CASCADE;
ALTER TABLE IF EXISTS user_skills ADD COLUMN IF NOT EXISTS proficiency VARCHAR(50);
ALTER TABLE IF EXISTS user_skills ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_skills ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT NOW();
ALTER TABLE IF EXISTS user_skills ADD CONSTRAINT IF NOT EXISTS user_skills_unique UNIQUE(user_id, skill_id);

-- Add other ALTER TABLE statements as needed
